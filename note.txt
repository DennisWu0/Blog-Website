set the connection to db
pip install mysql-connector
create an user database

the step of creating a mysql stil is intricate. i need to check it again
tommorow


i need to add the new column in the database by changing the code

class User and Userform

in the user_add function you need to update the new value of favarite color
and then blank the input

and i want to update in the update user information page. just add the 
new value to here

and change 2 html pages: user_add and user_update

??? should i need to pass the name ???

delete

create a delete function 

add a new colums for delete
highlight it and use url_for


#
add hash: gen hash and check hash

syntax : flask --app hello.py db migrate -m "added pw field"


in the user_add html add the space for pw

UserForm fucntion change 

# verifying hash pw

a new test pw function from form function 

PasswordForm class



# creating some json

- post model includes: id, title, content, author, date_posted,
and slug

- adn don't forget the migration

- A post form class includes: title, author, slug, and content
, submit button

- simple rest api here


in the last post page, i spent a lot on this widget=TextArea(). cause i put it in the 
datarequired field, instead of separating it.


# create an individual blog page when pressing to the read more

create a route in hello.py route to the post:id

change the url_for of READ MORE button

create a layout of this page


# edit the content of blog page

when i press to edit button it will show the post add page with the 
existing content for adjusting.

create edit route to return it's content

add the url_for to edit button

create edit.html that has the same with the post_data.html

# got the logic of this Flask server

# test the hash pw by delete the old db and create the new one
fixed this bug

# User Login

# User logout
